class PruebaExcepciones:
    """
    Demuestra el manejo de excepciones en dos bloques try–except–finally.
    Versión orientada a objetos para que tu diagrama UML tenga sentido.
    """

    @staticmethod
    def main() -> None:
        # ───────── Primer bloque try ─────────
        try:
            print("Ingresando al primer try")
            cociente = 10000 / 0           # ZeroDivisionError
            print("Después de la división")  # No se ejecuta
        except ZeroDivisionError:
            print("División por cero")
        finally:
            print("Ingresando al primer finally")

        # ───────── Segundo bloque try ─────────
        try:
            print("Ingresando al segundo try")
            objeto = None
            objeto.to_string()             # AttributeError
            print("Imprimiendo objeto")     # No se ejecuta
        except ZeroDivisionError:
            print("División por cero")
        except Exception:
            print("Ocurrió una excepción")
        finally:
            print("Ingresando al segundo finally")


# Punto de entrada, igual que en Java
if __name__ == "__main__":
    PruebaExcepciones.main()
